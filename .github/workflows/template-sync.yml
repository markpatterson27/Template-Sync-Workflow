name: Reusable workflow for syncing from template source
on:
  workflow_call:
    inputs:
      template-repo:
        description: 'Source repo in owner/repo formate'
        required: true
        type: string
      create-pr:
        description: 'Should a PR be created for changes'
        default: true
        required: false
        type: boolean
      update-branch-name:
        description: 'branch name to use for update commits'
        default: 'source-template-updates'
        required: false
        type: string
    secrets:
      workflowPAT:
        description: 'A PAT scoped to be able to update workflows'
        required: false
      templatePAT:
        description: 'A PAT scoped to be able to read the template repo'
        required: false

jobs:
  sync:
    name: Pull from template source
    runs-on: ubuntu-latest
    if: ${{ inputs.template-repo != github.repository }}
    steps:
      # checkout full repo
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.workflowPAT }}
          fetch-depth: 0
          path: main

      # checkout template repo
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.template-repo }}
          token: ${{ secrets.templatePAT }}
          fetch-depth: 0
          path: template

      # config user name and email
      - name: Config repo user
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
        working-directory: ./main

      # add local template repo as remote
      - name: Add local template repo as remote
        run: git remote add template ../template/.git
        working-directory: ./main

       # if creating PR for changes, create branch
      - name: Create branch for updates
        if: ${{ inputs.create-pr }}
        run: git checkout ${{ inputs.update-branch-name }} || git checkout -b ${{ inputs.update-branch-name }}
        working-directory: ./main

      # fetch template commits
      - name: Fetch commits
        run: git fetch --all
        working-directory: ./main

      # try merging changes from template repo
      - name: Try merge
        id: merge
        run: |
          current_sha=$(git rev-parse HEAD)
          git merge template/main --allow-unrelated-histories -X theirs
          if [[ $current_sha == $(git rev-parse HEAD) ]]; then
            echo "No merge"
            echo "::set-output name=merge::false"
          else
            echo "Merge!!"
            echo "::set-output name=merge::true"
          fi
        working-directory: ./main

      # if merge, push changes
      - name: Push changes
        if: ${{ steps.merge.outputs.merge != 'false' }}
        run: git push origin --all
        working-directory: ./main

      # if merge, create PR
      - name: Create PR
        if: ${{ inputs.create-pr && steps.merge.outputs.merge != 'false' }}
        run: gh pr create --title "Upstream update" --body "Updates from source template." --base main --head ${{ inputs.update-branch-name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./main
